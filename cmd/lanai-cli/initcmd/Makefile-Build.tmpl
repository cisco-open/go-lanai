DOCKER = docker
SSHADD = ssh-add

DESTDIR = dist
MODULE = {{ .Module.Path }}

EXECS = {{- range $key, $_ := .Executables }} {{ $key }} {{- end }}

GEN_LIST = \
	{{- range .Generates }}
	generate@{{ .Path }} \
	{{- end }}

RES_LIST = \
	{{- range .Resources }}
	resource@{{ .Output }} \
	{{- end }}

# target patterns
pGenerate = generate@%
pResource = resource@%

# Main
.PHONY: generate clean test build copy-resources $(GEN_LIST) $(EXECS) $(RES_LIST)

generate: init $(GEN_LIST)

test: generate
	$(GO) test -count=1 -v -failfast -timeout 0 -coverprofile $(DESTDIR)/coverage.out $(MODULE)/pkg/...

build: $(EXECS) copy-resources

copy-resources: $(RES_LIST)

# Docker
init-docker: init-once
	# ssh-add is necessary for build-docker
	$(SSHADD) -K ~/.ssh/id_rsa

build-docker: init-docker generate
	$(DOCKER) build -f "build/package/Dockerfile" --ssh default --progress=plain . -t europa:latest

clean:
	rm -rf $(DESTDIR)/*

# Generate
$(GEN_LIST):
	$(GO) generate $(@:$(pGenerate)=%)

# Build
	{{- range $name, $elem := .Executables }}
{{ $name }}:
	$(GO) build -o $(DESTDIR)/$@ {{ $elem.Main }}
	{{ end }}

# Copy Resources
	{{- range .Resources }}
resource@{{ .Output }}:
	cp -rf {{ .Pattern }} $(DESTDIR)/{{ .Output }}
	{{ end }}

