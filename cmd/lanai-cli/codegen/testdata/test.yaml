openapi: 3.0.0
info:
  title: 'Test Contract'
  version: '1'
  termsOfService: 'https://www.cisco.com'
  license:
    name: 'MIT'
paths:
  '/my/api/v1/testpath/{scope}':
    get:
      summary: Test Get API (No operation ID)
      parameters:
        - name: scope
          in: path
          required: true
          schema:
            format: "^[a-zA-Z0-5-_=]{1,256}$"
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseWithAllOf'
    delete:
      summary: Test Delete API
      operationId: DeleteTestPath
      parameters:
        - name: scope
          in: path
          required: true
          schema:
            format: "^[a-zA-Z0-5-_=]{1,256}$"
            type: string
        - $ref: '#/components/parameters/QueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                  - $ref: '#/components/schemas/GenericResponse'
    post:
      summary: Test Post API
      operationId: PostTestPath
      parameters:
        - $ref: '#/components/parameters/PathParam'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
  '/my/api/v2/testpath':
    get:
      operationId: GetAllTestPaths
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/TestRequest'
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  '/my/api/v3/anotherTest':
    get:
      operationId: GetAnotherTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResponse'

components:
  schemas:
    GenericResponse:
      type: object
      required:
        - stringValue
        - createdOnDate
        - stringWithRegexDefinedInPattern
        - objectValue
      properties:
        stringValue:
          type: string
          minLength: 0
          maxLength: 128
        createdOnDate:
          type: string
          format: date
        createdOnDateTime:
          type: string
          format: date-time
        myUuid:
          type: string
          format: uuid
        stringWithRegexDefinedInPattern:
          type: string
          pattern: "^[a-zA-Z0-9-_=]{1,256}$"
        stringWithRegexDefinedInFormat:
          type: string
          format: "^[a-zA-Z0-8-_=]{1,256}$"
        numberValue:
          type: number
          maximum: 10
        integerValue:
          type: integer
          maximum: 5
        numberArray:
          type: array
          items:
            type: number
          maxItems: 10
        objectValue:
          type: object
          required:
            - objectNumber
          properties:
            objectNumber:
              type: number
        directRef:
           $ref: '#/components/schemas/GenericObject'
        arrayOfRef:
          items:
              $ref: '#/components/schemas/ArrayItem'
          type: array
        arrayOfObjects:
          items:
              $ref: '#/components/schemas/GenericObject'
          type: array
      additionalProperties:
        type: string
    ArrayItem:
      type: string
    GenericResponseWithAllOf:
      allOf:
        - type: object
          properties:
            id:
              type: string
        - $ref: '#/components/schemas/GenericResponse'
    GenericObject:
      type: object
      properties:
        id:
          type: string
        enabled:
          type: object
          properties:
            inner:
              type: string
    InvalidObjectSchema:
      type: string
  responses:
    400:
      description: Bad Request
      headers:
        Some-Kinda-Header:
          description: "Some kinda header for this"
          schema:
            $ref: '#/components/schemas/GenericResponse'
      content:
        application/json:
          schema:
            type: object
            properties:
              BadRequestResponse:
                $ref: '#/components/schemas/InvalidObjectSchema'
    200:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
  parameters:
    QueryParam:
      name: testParam
      in: query
      description: A test parameter
      required: false
      deprecated: false
      allowEmptyValue: true
      schema:
        type: string
        minLength: 0
        maxLength: 128
    PathParam:
      name: scope
      in: path
      required: true
      schema:
        format: "^[a-zA-Z0-7-_=]{1,256}$"
        type: string
  requestBodies:
    TestRequest:
      description: Test Request
      required: false
      content:
        "application/json":
          schema:
            properties:
              uuid:
                type: string
                format: uuid
