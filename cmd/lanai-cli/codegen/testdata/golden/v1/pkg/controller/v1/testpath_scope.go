// Package v1 Generated by lanai-cli codegen.
// Derived from contents in openapi contract, path: /my/api/v1/testpath/{scope}
package v1

import (
    "context"
    "cto-github.cisco.com/NFV-BU/test-service/pkg/api"
    apiv1 "cto-github.cisco.com/NFV-BU/test-service/pkg/api/v1"
    "github.com/cisco-open/go-lanai/pkg/web"
    "github.com/cisco-open/go-lanai/pkg/web/rest"
    "go.uber.org/fx"
)

type TestpathScopeController struct{}

type testpathScopeControllerDI struct {
	fx.In
}

func NewTestpathScopeController(di testpathScopeControllerDI) web.Controller {
	return &TestpathScopeController{}
}

func (c *TestpathScopeController) Mappings() []web.Mapping {
	return []web.Mapping{
		rest.
			New("testpath-scope-delete").
			Delete("/api/v1/testpath/:scope").
			EndpointFunc(c.DeleteTestPath).
			Build(),
		rest.
			New("testpath-scope-get").
			Get("/api/v1/testpath/:scope").
			EndpointFunc(c.TestpathScopeGet).
			Build(),
		rest.
			New("testpath-scope-patch").
			Patch("/api/v1/testpath/:scope").
			EndpointFunc(c.TestpathScopePatch).
			Build(),
		rest.
			New("testpath-scope-post").
			Post("/api/v1/testpath/:scope").
			EndpointFunc(c.PostTestPath).
			Build(),
	}
}

func (c *TestpathScopeController) DeleteTestPath(ctx context.Context, req apiv1.DeleteTestPathRequest) (*apiv1.DeleteTestPathResponse, error) {
	return &apiv1.DeleteTestPathResponse{}, nil
}

func (c *TestpathScopeController) TestpathScopeGet(ctx context.Context, req apiv1.TestpathScopeGetRequest) (*api.GenericResponseWithAllOf, error) {
	return &api.GenericResponseWithAllOf{}, nil
}

func (c *TestpathScopeController) TestpathScopePatch(ctx context.Context, req apiv1.TestpathScopePatchRequest) (interface{}, error) {
	return nil, nil
}

func (c *TestpathScopeController) PostTestPath(ctx context.Context, req apiv1.PostTestPathRequest) (*api.GenericResponse, error) {
	return &api.GenericResponse{}, nil
}
