// Package api Generated by lanai_cli codegen. DO NOT EDIT
// Derived from openapi contract - components
package api

type ApiPolicy struct {
	Unlimited bool `json:"unlimited"`
}

type GenericObject struct {
	Enabled        GenericObjectEnabled        `json:"enabled"`
	Id             *string                     `json:"id"`
	ValueWithAllOf GenericObjectValueWithAllOf `json:"valueWithAllOf"`
}

type GenericObjectEnabled struct {
	Inner *string `json:"inner"`
}

type GenericObjectValueWithAllOf struct {
	ApiPolicy
}

type GenericResponse struct {
	ArrayOfObjects                  []GenericObject             `json:"arrayOfObjects"`
	ArrayOfRef                      *[]string                   `json:"arrayOfRef"`
	ArrayOfUUIDs                    *[]string                   `json:"arrayOfUUIDs" binding:"omitempty,dive,uuid"`
	CreatedOnDate                   string                      `json:"createdOnDate" binding:"required,date"`
	CreatedOnDateTime               string                      `json:"createdOnDateTime" binding:"omitempty,date-time"`
	DirectRef                       GenericObject               `json:"directRef"`
	IntegerValue                    *int                        `json:"integerValue" binding:"omitempty,max=5"`
	MyUuid                          string                      `json:"myUuid" binding:"omitempty,uuid"`
	NumberArray                     *[]float64                  `json:"numberArray" binding:"omitempty,max=10"`
	NumberValue                     *float64                    `json:"numberValue" binding:"omitempty,max=10"`
	ObjectValue                     *GenericResponseObjectValue `json:"objectValue" binding:"required"`
	StringValue                     *string                     `json:"stringValue" binding:"required,max=128"`
	StringWithEnum                  string                      `json:"stringWithEnum" binding:"omitempty,enumof=asc desc"`
	StringWithNilEnum               *string                     `json:"stringWithNilEnum" binding:"omitempty,enumof=asc desc"`
	StringWithRegexDefinedInFormat  string                      `json:"stringWithRegexDefinedInFormat" binding:"omitempty,regexCD184"`
	StringWithRegexDefinedInPattern string                      `json:"stringWithRegexDefinedInPattern" binding:"required,regexEB33C"`
	Values                          *map[string]string
}

type GenericResponseObjectValue struct {
	ObjectNumber *float64 `json:"objectNumber" binding:"required"`
}

type GenericResponseWithAllOf struct {
	Id *string `json:"id"`
	GenericResponse
}

type TestRequest struct {
	Uuid string `json:"uuid" binding:"omitempty,uuid"`
}
