{{ define "RequestStruct" }}
    {{- $operation := index . 0 }}
    {{- $currentPkg := index . 1 }}

    {{- $hasOneRef := containsSingularRef $operation.Data }}
    {{- $onlyHasReqBodyRef := and $hasOneRef $operation.Data.RequestBody}}

    {{- $isEmpty := isEmpty $operation.Data }}

    {{/* Skip making struct if there won't be anything in it, or just one ref in the request body (function will import it directly) */}}
    {{- $shouldSkip := or $isEmpty $onlyHasReqBodyRef }}
    {{ if not $shouldSkip }}
        {{- $structName := concat $operation.Name "Request" | toTitle }}
        {{- $respStruct := NewStruct $structName $currentPkg }}
        {{- range $operation.Data.Parameters }}
                {{ template "ParameterProperty" args . $currentPkg $respStruct }}
        {{- end }}
        {{- with $operation.Data.RequestBody }}
            {{- with .Ref }}
                {{- $respStruct = $respStruct.AddEmbeddedStruct . }}
            {{- else }}
                {{- range .Value.Content }}
                   {{- with .Schema.Ref }}
                        {{- $respStruct = $respStruct.AddEmbeddedStruct . }}
                    {{- else }}
                       {{- $schema := schema "" .Schema }}
                       {{- template "SchemaProperties" args $schema "pkg/api" $respStruct }}
                       {{- if ne $schema.Type "object" }}
                            {{- $requiredList := requiredList $operation.Data.RequestBody.Value }}
                            {{- $property := property $schema.Data "Body" $requiredList $currentPkg $schema.Name }}
                            {{- $property = $property.SetOmitJSON true }}
                            {{ template "properties" args $property $respStruct}}
                       {{- end }}
                    {{- end }}
                {{- end }}
            {{- end }}
        {{- end }}
        {{ template "struct" args $respStruct }}

        {{- template "requestBodyMarshallingFunctions" args $operation }}
        {{- registerStruct $respStruct.Name $respStruct.Package }}
    {{- end }}
{{- end }}

{{ define "requestBodyMarshallingFunctions" }}
    {{- $operation := index . 0 }}
    {{- $addMarshallingFunctions := false }}
    {{- $structName := concat $operation.Name "Request" | toTitle }}

    {{- with $operation.Data.RequestBody }}
        {{- if eq .Ref "" }}
            {{- range .Value.Content }}
                {{- if eq .Schema.Ref "" }}
                    {{- if not (.Schema.Value.Type.Is "object") }}
                        {{- $addMarshallingFunctions = true }}
                    {{- end }}
                {{- end }}
            {{- end }}
        {{- end }}
    {{- end }}
    {{- if $addMarshallingFunctions }}

    func (t *{{ $structName }}) UnmarshalJSON(data []byte) (err error) {
        return json.Unmarshal(data, &t.Body)
    }

    func (t {{ $structName }}) MarshalJSON() ([]byte, error)  {
        return json.Marshal(t.Body)
    }

    {{- end }}
{{- end }}
