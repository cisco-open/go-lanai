# OPA Polices Stubs generated by `lanai-cli codegen`

**Note**: The topic of "How to properly write OPA policies" is not covered in this document

# What's Next:

### Download Constraints from Policy Service

```
wget --content-disposition http://localhost:8911/policy/api/v1/constraint/export
```

### Verify Environment

```
make test
```

Verify that test stubs executed. For example:

```
opa test . -b constraints.tar.gz -v
api_access_test.rego:
data.testservice_api.test_get_keys_allowed: PASS (644.917µs)
data.testservice_api.test_get_keys_denied: PASS (196.875µs)
data.testservice_api.test_delete_controller_responses_test_allowed: PASS (181.209µs)
data.testservice_api.test_delete_controller_responses_test_denied: PASS (186.166µs)
--------------------------------------------------------------------------------
PASS: 4/4
```

### Write Policies

API access policy stubs is in `api_access.rego`. Review and update it as desired.

If data filtering polices are required, add new policy file with different REGO package name.

> **Note 1**: The package name usually same as resource type that it trying to filter.

> **Note 2**: Whenever an new REGO package is added, `.manifest` need to be updated to include that package.

### Write Tests

Any REGO file ending with `_test.rego` are considered tests. The test cases are also policies starting with `test_`.

See [OPA Policy Testing](https://www.openpolicyagent.org/docs/latest/policy-testing/) for more information

### Pack and Upload to Localhost

```
make upload
```

This command attempt to pack the policies and deploy it to localhost Policy Service.

> **Note**: Review `Makefile` to verify that all necessary files are included in the uploaded gzip.
            (Tests are not needed by Policy Service, please exclude them)